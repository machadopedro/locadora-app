{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["backpath","Navigation","user","console","log","exact","activeClassName","to","className","Cars","setCar","cars","List","map","car","Item","key","model","onClick","Home","useState","setCars","useEffect","fetch","then","res","json","data","LoanConfirmed","Cadastro","name","setName","cpf","setCpf","a","client","method","headers","body","JSON","stringify","Form","Field","Input","placeholder","value","onChange","e","target","Login","setUser","ok","Loan","numeroDias","setNumeroDias","carInfos","setCarInfos","parkPass","setParkPass","loan","response","Checkbox","label","About","Contact","Main","path","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8f51be7c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { NavLink, Switch, Route } from 'react-router-dom';\nimport { List, Button, Form, Input, Checkbox} from 'semantic-ui-react';\n\nconst backpath = 'https://ls6nv0y1n0.execute-api.us-east-1.amazonaws.com'\n\nfunction App() {\n  const [user, setUser] = useState('guest');\n\n  return (\n    <div className='app'>\n      <h1>Locadora</h1>\n      <Navigation user={user}/>\n      <Main setUser={setUser}/>\n    </div>\n  );\n}\n\nfunction Navigation({user}) {\n  console.log(user)\n  return (\n    <nav>\n      <ul>\n        <li><NavLink exact activeClassName=\"current\" to='/'>Home</NavLink></li>\n        <li><NavLink exact activeClassName=\"current\" to='/about'>About</NavLink></li>\n        <li><NavLink exact activeClassName=\"current\" to='/contact'>Contact</NavLink></li>\n        <li className='user-item'><p className='user-name'>{user}</p></li>\n      </ul>\n    </nav>\n  );\n}\n\n\n\n/*\nfunction A() {\n  const [currentTime, setCurrentTime] = useState(0);\n\n  useEffect(() => {\n    fetch('/time').then(res => res.json()).then(data => {\n      setCurrentTime(data.time);\n    });\n  }, []);\n\n  return(\n    <div className='home'>\n      <h1>Welcome to my portfolio website</h1>\n      <p> Feel free to browse around and learn more about me.</p>\n      <br/>\n      <p>The current time is {currentTime}.</p>\n    </div>\n  );\n\n}\n*/\nfunction Cars({setCar, cars}) {\n\n  \n  return (\n    <div>\n    <List className='car-list'>\n      {cars.map(car => {\n        return (\n            <List.Item key={car.model}>\n            \n              <div className='car-item'>\n                {car.model}\n                <NavLink className='button-alugar' to='/loan' car={car} onClick={()=>\n                  setCar(car.model)\n                \n                }>Alugar</NavLink>\n              </div>\n            \n            </List.Item>\n        )\n      })}\n    </List>\n\n    </div>\n  )\n}\n\n\nfunction Home({setCar}) {\n  const [cars, setCars] = useState([]);\n\n  useEffect(() => {\n    fetch(backpath+'/available_cars').then(res => res.json()).then(data => {\n      console.log(data)\n      setCars(data.cars);\n    });\n  }, []);\n\n\n\n  return(\n    <div>\n      <p>Lista de carros</p>\n      <br />\n      <Cars setCar={setCar} cars={cars}/>\n    </div>\n  );\n\n}\n\nfunction LoanConfirmed() {\n\n  return(\n    <div>\n      <p>Obrigado por alugar conosco!</p>\n    </div>\n  );\n\n}\n\nfunction Cadastro() {\n  const [name, setName] = useState('');\n  const [cpf, setCpf] = useState(0);\n\n  async function handleSignUp(){\n    const client = {'name': name, 'cpf': cpf}\n    const response = await fetch(backpath+'/add_client', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(client)\n    })\n  }\n  return(\n    <div>\n      <Form>\n        <Form.Field>\n          <Input\n            placeholder='CPF'\n            value={cpf}\n            onChange={e => setCpf(e.target.value)}\n          \n          ></Input>\n        </Form.Field>\n        <Form.Field>\n          <Input\n            placeholder='Nome'\n            value={name}\n            onChange={e => setName(e.target.value)}\n          ></Input>\n        </Form.Field>\n        <Form.Field>\n          <NavLink className='button-geral' to='/login' onClick={handleSignUp}>\n            Sign Up\n          </NavLink>\n        </Form.Field>\n      </Form>\n    </div>\n  )\n}\n\nfunction Login({setUser}) {\n  const [cpf, setCpf] = useState(0);\n\n  function handleLogIn() {\n    fetch(backpath+'/clients/'+cpf).then(res => res.json()).then(data => {\n      console.log(data);\n      if (data.ok){\n        setUser(data.name)\n      }\n    });\n  }\n  return(\n    <div>\n      <Form>\n        <Form.Field>\n          <Input\n            placeholder='CPF'\n            value={cpf}\n            onChange={e => setCpf(e.target.value)}\n          \n          ></Input>\n        </Form.Field>\n        <Form.Field>\n          <NavLink className='button-geral' to='/' onClick={handleLogIn(cpf)}>\n            Log In\n          </NavLink>\n        </Form.Field>\n      </Form>\n      <br/>\n      <NavLink className='button-geral' to='cadastro'> Sign Up</NavLink>\n    </div>\n  )\n}\n\nfunction Loan({car}) {\n  const [numeroDias, setNumeroDias] = useState(0);\n  const [carInfos, setCarInfos] = useState({});\n  const [parkPass, setParkPass] = useState(0);\n\n  useEffect(() => {\n    fetch(backpath+'/available_cars/'+car).then(res => res.json()).then(data => {\n      console.log(data)\n      setCarInfos(data);\n    });\n  }, []);\n\n  async function handleClick(){\n    console.log(carInfos);\n    const loan = {\n      'cpf': 124245,\n      'plate': carInfos['plate'],\n      'number_of_days': numeroDias,\n      'park_pass': parkPass\n    }\n    console.log(loan)\n    const response = await fetch(backpath+'/add_loan', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(loan)\n    })\n    console.log(response)\n  }\n  return(\n    <div>\n      <p>Aluguel</p>\n      {car}\n      <br/>\n      <Form>\n        <Form.Field>\n          <Input  \n            placeholder=\"Numero de dias\"\n            value={numeroDias}\n            onChange={e => setNumeroDias(e.target.value)}\n          >\n          </Input>\n        </Form.Field>\n        <br/>\n        <Form.Field>\n          <Checkbox\n            label='Deseja incluir o Park-Pass?'\n            onChange={() => {\n              if (parkPass === 0){\n                setParkPass(1);\n              }\n              else{\n                setParkPass(0);\n              }\n            }\n            }\n          >\n          </Checkbox>\n        </Form.Field>\n        <Form.Field>\n          <NavLink className='button-geral' onClick={handleClick} to='/confirmed_loan' >\n            Confirmar\n          </NavLink>\n        </Form.Field>\n      </Form>\n      <br />\n    </div>\n  );\n\n}\n\nfunction About(){\n\n  return (\n    <div className='about'>\n      <h1>About Me</h1>\n      <p>Ipsum dolor dolorem consectetur est velit fugiat. Dolorem provident corporis fuga saepe distinctio ipsam? Et quos harum excepturi dolorum molestias?</p>\n      <p>Ipsum dolor dolorem consectetur est velit fugiat. Dolorem provident corporis fuga saepe distinctio ipsam? Et quos harum excepturi dolorum molestias?</p>\n    </div>\n  );\n\n}\n\nfunction Contact() {\n  return (\n    <div className='contact'>\n      <h1>Contact Me</h1>\n      <p>You can reach me via email: <strong>hello@example.com</strong></p>\n    </div>\n  );\n}\n\nfunction Main({setUser}) {\n  const [car, setCar] = useState('Teste');\n\n  return (\n    <Switch>\n      <Route exact path='/'>\n        <Home setCar={setCar}/>\n      </Route>\n      <Route exact path='/about'>\n        <About />\n      </Route>\n      <Route exact path='/contact'>\n        <Contact />\n      </Route>\n      <Route exact path='/loan'>\n        <Loan car={car}/>\n      </Route>\n      <Route exact path='/confirmed_loan'>\n        <LoanConfirmed/>\n      </Route>\n      <Route exact path='/login'>\n        <Login setUser={setUser}/>\n      </Route>\n      <Route exact path='/cadastro'>\n        <Cadastro setUser={setUser}/>\n      </Route>\n    </Switch>\n\n    \n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}